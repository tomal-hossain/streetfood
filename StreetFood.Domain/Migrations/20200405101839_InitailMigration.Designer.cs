// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using StreetFood.Domain;

namespace StreetFood.Domain.Migrations
{
    [DbContext(typeof(StreetFoodDbContext))]
    [Migration("20200405101839_InitailMigration")]
    partial class InitailMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("StreetFood.Domain.Models.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.ToTable("Country");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Bangladesh"
                        },
                        new
                        {
                            Id = 2,
                            Name = "India"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Srilanka"
                        },
                        new
                        {
                            Id = 4,
                            Name = "Pakistan"
                        },
                        new
                        {
                            Id = 5,
                            Name = "Bhutan"
                        },
                        new
                        {
                            Id = 6,
                            Name = "China"
                        },
                        new
                        {
                            Id = 7,
                            Name = "Japan"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Nepal"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Qatar"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Singapore"
                        },
                        new
                        {
                            Id = 11,
                            Name = "Malaysia"
                        },
                        new
                        {
                            Id = 12,
                            Name = "Thailand"
                        },
                        new
                        {
                            Id = 13,
                            Name = "Australia"
                        },
                        new
                        {
                            Id = 14,
                            Name = "Canada"
                        },
                        new
                        {
                            Id = 15,
                            Name = "USA"
                        });
                });

            modelBuilder.Entity("StreetFood.Domain.Models.CountryFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CountryId")
                        .HasColumnType("int");

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CountryId");

                    b.HasIndex("FoodId");

                    b.ToTable("CountryFood");
                });

            modelBuilder.Entity("StreetFood.Domain.Models.Food", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("AddedAt")
                        .HasColumnType("date");

                    b.Property<int>("AddedById")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.HasKey("Id");

                    b.HasIndex("AddedById");

                    b.ToTable("Food");
                });

            modelBuilder.Entity("StreetFood.Domain.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(64)");

                    b.Property<bool>("IsConfirmed")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Pasword")
                        .IsRequired()
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("User");
                });

            modelBuilder.Entity("StreetFood.Domain.Models.CountryFood", b =>
                {
                    b.HasOne("StreetFood.Domain.Models.Country", "Country")
                        .WithMany()
                        .HasForeignKey("CountryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("StreetFood.Domain.Models.Food", "Food")
                        .WithMany("PopularIn")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("StreetFood.Domain.Models.Food", b =>
                {
                    b.HasOne("StreetFood.Domain.Models.User", "AddedBy")
                        .WithMany("Foods")
                        .HasForeignKey("AddedById")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
